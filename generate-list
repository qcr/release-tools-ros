#!/usr/bin/env python
from __future__ import print_function

import os
import sys
import re
import pprint

path = os.path.dirname(os.path.realpath(__file__))

dependencies = {}
paths = {}

packages = sys.argv[1:]
packages.sort(key=lambda x: len(x))

for package_dir in packages:
  if [x for x in paths.values() if package_dir.startswith(x + '/')]:
    continue

  try:
    with open(os.path.join(path, package_dir, 'CMakeLists.txt')) as f:
      data = f.read()

      if 'cmake_minimum_required' not in data:
        continue
  
  except FileNotFoundError:
    continue
    
  with open(os.path.join(path, package_dir, 'package.xml')) as f:
    data = f.read()
    
    name = re.findall(r'<name>([^<]+)', data)[0]
    depends = [match for a, b, c, match in re.findall('<([a-z_]*depend)( version_gte="[^"]*")?( condition="\$ROS_PYTHON_VERSION == 3")?>([^<]+)', data) if not (a.startswith('exec') or a.startswith('run'))]

    dependencies[name] = depends

    paths[name] = package_dir

package_names = list(dependencies.keys())

for package in dependencies:
  dependencies[package] = list(set(package_names).intersection(dependencies[package]))

package_names.sort(key=lambda x: len(dependencies[x]))
visited = []

retries = {}

while package_names:
  selected = package_names.pop(0)

  if len(dependencies[selected]) > 0:
    if not selected in retries:
      retries[selected] = 5

    if retries[selected] == 0:
        raise Exception('Something went wrong. Perhaps a circular dependency?')
    
    retries[selected] -= 1
      

  visited.append(selected)

  for package in dependencies:
    if selected in dependencies[package]:
      dependencies[package].remove(selected)

  package_names.sort(key= lambda x: len(dependencies[x]))

for name in visited:
  print(paths[name])
